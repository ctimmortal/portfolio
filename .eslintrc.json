{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx", "perfectionist", "unicorn", "jsdoc"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },

    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript"],
      "rules": {}
    },

    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    },

    {
      "files": ["*.ts", "*.mts", "*.cts", ".tsx", "*.js", "*.mjs", "*.cjs", "*.jsx"],
      "extends": [
        "plugin:unicorn/recommended",
        "plugin:jsdoc/recommended-typescript",
        "plugin:perfectionist/recommended-natural-legacy"
      ],
      "rules": {
        "perfectionist/sort-imports": [
          "warn",
          {
            "type": "natural",
            "newlinesBetween": "always",
            "groups": [
              ["side-effect", "side-effect-style"],
              "builtin",
              "external",
              "type",
              "internal-type",
              "internal",
              ["parent-type", "sibling-type", "index-type"],
              ["parent", "sibling", "index"],
              "object",
              "unknown"
            ]
          }
        ],
        "perfectionist/sort-enums": ["warn", { "forceNumericSort": true }],
        "perfectionist/sort-union-types": [
          "warn",
          {
            "ignoreCase": false,
            "groups": [
              "conditional",
              "function",
              "operator",
              "literal",
              "keyword",
              "named",
              "import",
              "tuple",
              "object",
              ["intersection", "union"],
              "nullish",
              "unknown"
            ]
          }
        ],
        "perfectionist/sort-exports": ["warn", { "type": "natural" }],
        "perfectionist/sort-named-imports": ["warn", { "type": "natural" }],
        "perfectionist/sort-named-exports": ["warn", { "type": "natural", "groupKind": "values-first" }],
        "perfectionist/sort-interfaces": "off",
        "perfectionist/sort-classes": [
          "warn",
          {
            "groups": [
              "constructor",
              "index-signature",
              "static-block",
              "accessor-property",
              ["get-method", "set-method"],
              "method",
              "override-method",
              "static-method",
              "protected-method",
              "private-method",
              "protected-accessor-property",
              "private-accessor-property"
            ]
          }
        ],
        "perfectionist/sort-modules": [
          "warn",
          {
            "groups": [
              "class",
              "function",
              ["interface", "type", "enum"],
              [
                "export-default-class",
                "export-default-function",
                "export-default-enum",
                "export-default-type",
                "export-default-interface"
              ]
            ]
          }
        ],

        "unicorn/prevent-abbreviations": "off",
        "unicorn/no-array-reduce": "off",
        "unicorn/no-array-callback-reference": "off",
        "unicorn/prefer-number-properties": "off",
        "unicorn/import-style": [
          "warn",
          {
            "styles": {
              "path": {
                "named": true
              }
            }
          }
        ],
        "unicorn/numeric-separators-style": [
          "warn",
          {
            "number": {
              "minimumDigits": 12
            }
          }
        ],

        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-explicit-any": "off",

        "jsdoc/require-jsdoc": "off"
      }
    },

    {
      "files": [
        "*.cjs",
        "jest.config.js",
        "jest.preset.js",
        "prettier.config.js",
        "eslint.config.js",
        "**/eslint.config.js"
      ],
      "rules": {
        "unicorn/prefer-module": "off"
      }
    },

    {
      "files": ["*.json"],
      "parser": "eslint-parser-jsonc"
    },

    {
      "files": ["*.tsx", "*.jsx"],
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "cases": {
              "pascalCase": true,
              "kebabCase": true
            }
          }
        ]
      }
    }
  ]
}
